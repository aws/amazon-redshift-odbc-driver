DRV_SRCHOME is where you have Brazil package source.

[A] How to build 64 bit ODBC driver on Windows using IDE?

1. Go under $DRV_SRCHOME/RedshiftODBCDriver/src/odbc/rsodbc
2. Now open rsodbc_all.sln using VS 2015
3. Select the configuration to build
4. Now do Project build

[B] How to build and package 64 bit ODBC Driver on Windows using batch file?

1. Open the "Visual Studio 2015 Command Prompt" from Visual Studio Program Item group.
2. Change directory to $DRV_SRCHOME/RedshiftODBCDriver/src/odbc/rsodbc
3. Now run package64.bat with version number as argument like 3.5.1
4. It will build libpq.lib, libpgport.lib and rsodbc.dll. After that it will also create MSI package for the installation under "install" directory.

[E] How to build 64 bit ODBC driver on Linux using IDE?

1. /usr/include/sqlext.h has two definitions incorrect for 64 bit build, so make following two changes in sqlext.h:

   a) 
      Incorrect:

	SQLRETURN SQL_API SQLExtendedFetch(
	    SQLHSTMT           hstmt,
	    SQLUSMALLINT       fFetchType,
	    SQLROWOFFSET       irow,
	    SQLROWSETSIZE 	  *pcrow,
	    SQLUSMALLINT 	  *rgfRowStatus);
      
     Correct:

	SQLRETURN SQL_API SQLExtendedFetch(
	    SQLHSTMT           hstmt,
	    SQLUSMALLINT       fFetchType,
	    SQLLEN       irow,
	    SQLULEN 	  *pcrow,
	    SQLUSMALLINT 	  *rgfRowStatus);

   b) 
       Incorrect:

	SQLRETURN SQL_API SQLParamOptions(
	    SQLHSTMT           hstmt,
	    SQLUINTEGER        crow,
	    SQLUINTEGER 	  *pirow);

	Correct:

	SQLRETURN SQL_API SQLParamOptions(
	    SQLHSTMT           hstmt,
	    SQLULEN	        crow,
	    SQLULEN	 	  *pirow);

1.1 /usr/include/sqlucode.h has one definition incorrect for 64 bit build, so make following change in it:

     Incorrect:

	SQLRETURN SQL_API SQLColAttributeW(
		SQLHSTMT		hstmt,
		SQLUSMALLINT	iCol,
		SQLUSMALLINT	iField,
		SQLPOINTER		pCharAttr,
		SQLSMALLINT		cbCharAttrMax,	
		SQLSMALLINT  	*pcbCharAttr,
		SQLPOINTER		pNumAttr);	

	Correct:

	SQLRETURN SQL_API SQLColAttributeW(
		SQLHSTMT		hstmt,
		SQLUSMALLINT	iCol,
		SQLUSMALLINT	iField,
		SQLPOINTER		pCharAttr,
		SQLSMALLINT		cbCharAttrMax,	
		SQLSMALLINT  	*pcbCharAttr,
		SQLLEN *	pNumAttr);

1.2 /usr/include/sql.h has one definition incorrect for 64 bit build, so make following change in it:

     Incorrect:

    SQLRETURN  SQL_API SQLColAttribute (SQLHSTMT StatementHandle,
                                        SQLUSMALLINT ColumnNumber, SQLUSMALLINT FieldIdentifier,
                                        SQLPOINTER CharacterAttribute, SQLSMALLINT BufferLength,
                                        SQLSMALLINT *StringLength, SQLPOINTER NumericAttribute);

     Correct:

    SQLRETURN  SQL_API SQLColAttribute (SQLHSTMT StatementHandle,
                                        SQLUSMALLINT ColumnNumber, SQLUSMALLINT FieldIdentifier,
                                        SQLPOINTER CharacterAttribute, SQLSMALLINT BufferLength,
                                        SQLSMALLINT *StringLength, SQLLEN *NumericAttribute);
	


2. Go under $DRV_SRCHOME/RedshiftODBCDriver/src/pgclient
3. Run build64.sh for 64 bit libpq.a and libpgport.a
4. It will create libpq.a and libpgport.a in the Release directory under their source directory. 
5. Open the .project from $DRV_SRCHOME/RedshiftODBCDriver/src/odbc/rsodbc in the Eclipse.
6. Build the project. ODBC driver librsodbc.so created under $DRV_SRCHOME/RedshiftODBCDriver/src/odbc/rsodbc/Debug or Release, depending upon selected configuration.

[E] How to build and package 64 bit ODBC Driver on Linux using script file?

1. Update /usr/include/sql*.h as pointed in above question.
2. Go under $DRV_SRCHOME/RedshiftODBCDriver/src/odbc/rsodbc
3. Now run package64.sh with RPM label as argument like 3.5.1
4. It will build libpq.a, libpgport.a and librsodbc.so. After that it will also create RPM package for the installation under "rpm" directory.

[F] Package name:

[G] Which gcc use to build?

    $ gcc -v
    Using built-in specs.
    Target: x86_64-unknown-linux-gnu
    Configured with: ../gcc-4.1.2-20080825/configure --prefix=/opt/redshift/gcc
    -enable-languages=c,c++ --libdir=/opt/redshift/gcc/lib64
    Thread model: posix
    gcc version 4.1.3 20080704 (Red Hat 4.1.2-27)


